apiVersion: v1
kind: ConfigMap
metadata:
  name: talos-patches
  namespace: test
data:
  all-patch.yaml: |
    cluster:
      network:
        podSubnets:
          - 10.245.0.0/16
  worker-patch.yaml: |
    machine:
      kubelet:
        extraMounts:
          - destination: /var/lib/longhorn
            type: bind
            source: /var/lib/longhorn
            options:
              - bind
              - rshared
              - rw
---
apiVersion: v1
kind: Pod
metadata:
  name: talos-config-server
  namespace: test
  labels:
    app: talos-config
spec:
  restartPolicy: Never
  volumes:
    - name: config-volume
      emptyDir: {}
    - name: patch-volume
      configMap:
        name: talos-patches
  containers:
    - name: talos-bootstrap
      image: alpine:latest
      command: ["/bin/sh", "-c"]
      args:
        - |
          apk add --no-cache curl bash tar python3 openssl && \
          curl -sL https://talos.dev/install | sh && \
          export IP=10.244.3.15 && \
          mkdir -p /config && cd /config && \
          cp /patches/*.yaml . && \
          talosctl gen config K8s https://$IP:6443 \
            --config-patch @all-patch.yaml \
            --config-patch-worker @worker-patch.yaml && \
          talosctl --talosconfig talosconfig config endpoint $IP && \
          talosctl --talosconfig talosconfig config node $IP && \
          talosctl apply-config --insecure --nodes $IP --file controlplane.yaml && \
          sleep 10 && \
          talosctl bootstrap --talosconfig talosconfig && \
          talosctl kubeconfig . --talosconfig talosconfig && \
          python3 -m http.server 80
      workingDir: /config
      volumeMounts:
        - name: config-volume
          mountPath: /config
        - name: patch-volume
          mountPath: /patches
---
apiVersion: v1
kind: Service
metadata:
  name: talos-config
  namespace: test
spec:
  selector:
    app: talos-config
  ports:
    - port: 80
      targetPort: 80
